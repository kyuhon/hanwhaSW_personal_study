08.11 static, 상속

static 키워드에 대한 이해
	결국 생성자에서 덮어씌워지기 때문에 static메소드나 initblock에서는 공통적으로 사용하는 것 이외에 사용되지는 않는다
initblock 초기화 블록
객체배열
dto -> 자바빈형태 -> 10:22
객체를 호출하는 부분은 JDBC부터 제대로 학습예정
디자인패턴으로 배열을 사용해서 캐싱할 수 있다 
상속 - 다형성의 토대가되었다, 도구들을 사용하려면 상속을 이해해야한다
Heap 영역
	stack		heap - young,old		static
	stack에 Member m1 = new Member(); -> m1 = null => unreachable: 참조되지 않는 객체
	reachable: 참조하고있는 객체
	unreachable: 참조되지 않는 객체
	mark & sweep
영속성이고 안전한 자바를 
가비지컬렉터가 없어야 스탑더월드 현상이 발생한다??
c++ 효율적이지만 학습과정이 빡쎄다
어노테이션...어려버

1. 업캐스팅 (Upcasting)
정의: 자식 클래스 객체를 부모 클래스 타입으로 참조하는 것

특징

명시적 형 변환이 필요 없는 경우가 많음 (자동 변환)

부모 클래스에 선언된 멤버(필드, 메서드)만 접근 가능

실제 동작은 오버라이딩된 자식 메서드가 실행됨 (다형성)

목적: 다형성을 이용해 하나의 타입으로 여러 객체를 처리하기 위해 사용

2. 다운캐스팅 (Downcasting)
정의: 부모 클래스 타입의 참조를 자식 클래스 타입으로 변환

특징

명시적 형 변환 필요

부모 타입에 없는 자식만의 멤버에 접근 가능

잘못된 다운캐스팅은 ClassCastException 발생

목적: 부모 타입 참조를 다시 자식 타입으로 변환해,
자식 클래스 고유 기능을 사용하기 위해

@Override 목적
	1. 오버라이딩 메소드를 확인하기 용이하도록 가독성 역할
	2. 오버라이딩 문법 위반 시 컴파일 에러 발생(feat. 개발 시 오류 감소) 
	
부모타입으로 바뀌는걸 자동형변환한다

확인사항
09:03 static 메모리
09:22 공간인것과 아닌것
09:30 JVM -> 명시적 초기화
09:40 메소드 실행순서
12:30 this. super.
14:00 Heap영역에 가비지컬렉터가 어떻게 **********