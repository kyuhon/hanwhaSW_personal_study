08.14 예외처리 추가학습, file객체
finally
	try에 발생하는 리소스반납코드를 생략하고 catch문으로 넘어가는 경우가 있어서 반드시 실행해야할 부분을 따로 작성해주어야 한다
	try 블럭에서 예외가 발생하든 발생하지 않던 try블럭과 관계 된 반드시 실행되어야 할 부분 작성
처음에 배울 때 안쓰기때문에 안배우면 안된다
NPE방지코드
file사용 - csv파일/ log를 쌓을 때 사용
byte 단위의 스트림이기 때문에 한글입력이 안됨
형변환보조스트림 
	system.in이나 out을 사용했을 때 
flush() -> 나중에 JPA가서도 나온다
Scanner 부가기능이 많아서 속도가 느림
connectless
팀이름으로 컨퍼런스를 만들어서 키우고싶었다...
implements Serializable
	버전관리에 의의가 크다
	객체 입출력의 대상이 되는 클래스는 Serializable 인터페이스를 구현해야 한다
오토박싱


확인사항
09:05 throws 설정 위치
09:14 finally
09:38 NPE방지코드
10:22 I/O 1차선 통로, 인코딩, UTF-8, 3byte
10:44 file 객체를 지금도 사용하는거에 대해서
11:18 fis.read -> nextToken이랑 똑같다
11:22 인코딩이 안되서 글자가 깨지는 부분
11:35 byte 단위의 스트림 -> 한글입력 x
12:00 스트림
12:10 bufferedWriter
12:14 close, flush ************************
12:32 System.in, Scanner
12:39 리소스 반환 
	bw.close() 제일 외곽의 보조스트림만 close()해도 내부 스트림들이 모두 닫힘
14:07 데이터 타입 입출력 보조 스트림
14:33 레고성, 직렬화(Serialization)와 역직렬화
15:28 타입안정성이 좋지 않고 구현의 편의성이 좋음
		타입안정성이 좋지 않은걸 보안하기위해 사용하는 generic
15:35 타입안정성이 좋은 제네릭
