09.08 AOP

필드 값이 안들어가겠다싶으면 래퍼클래스를 사용해야한다??
AOP는 주로 서비스 계층에서
proxy 대리인, 대리자
invoke를 시킨다
	메소드 하나만 선택해서 실행시킨다??
	non-static method
종속성에 사용하는 


확인사항
09:11 Spring AOP
09:14 Advice의 종류, weaving
09:26 자동으로 주입되는 부분 체크
10:05 타겟 메소드 분해
10:23 returning값이 바뀌어도 실행됨??
10:29 착각할 수 있는 부분
	@AfterThrowing 작동 안되는거 확인한번하기
11:15 CGlib
12:03 FrameWork
	FrameWork와 library
14:10 SpringBoot설명
14:49 th: , <%= %>

하브루타
@Aspect
	pointcut과 advice를 하나의 클래스 단위로 정의
	@Pointcut
		클래스에 포인트 컷을 정의하면 여러 조인 포인트를 매치시킬 수 있다
	advice
	@Before, @After 등은 Advice의 구체적인 형태를 지정하는 어노테이션
		

AOP
관점 지향 프로그래밍
중복되는 코드를 분리하여 코드 실행 전과 후에 해당 코드를 삽입함으로써
소스코드의 중복을 줄일 수 있는 객체화 기술
	proxy
		대리자라는 뜻으로 

spring mvc 요청 처리 과정



yml파일
들여쓰기로 계층 구조를 표현하여 JSON사용에 호환성이 높고 가독성이 상대적으로 더 좋음
properties파일
전통적인 방식으로 key, value형식의 각 줄마다 속성을 정의

@Aspect
AOP, proxy
spring mvc 요청 처리 과정
yml파일
properties파일
