09.23 msa


단어
scale out - 서버를 나누는 구조
단일 인점
Ribbon

msa
히스트릭스, 레질리언스??
라운드로빈
LoadBalancer - 부하를 막아주기 위해 사용
Spring Cloud Gateway - apiGateway, LoadBalancer
유레카 클라이언트
api게이트웨이가 유레카 서버 에서 확인후 로드밸런서를 거쳐 유레카클라이언트로 접근한다.
L4/L7
유레카 서버를 만들고 시작한다

유레카 서버를 터미널에서 실행하는 이유
	리소스를 많이먹음

마이바티스 프로젝트에 build - libs 경로 이동하고 -> java -jar eurekaserver-0.0.1-SNAPSHOT.jar

종속 추가에 Gateway가 아닌 reactivegateway
	webflux 기술적용되어서 비동기 처리를 지원해준다

503 에러가 나오면 게이트웨이에 문제가있다

spring.cloud.gateway.routes 작성 시 주의점
경로 상이든 http메소드 상이든 좀 더 좁은 범위에 속하면 위에 적어야 적용된다


1. user 서비스 (jpa)
	회원가입
	회원가입 시 비밀번호 암호화 -> BCrypt
	로그인 -> Token
	인증, 인가, 유효성 검사
2. order 서비스 (mybatis)

3. 통신
4. config 서버 설정
5. actuator

확인사항
1교시 수업 다시듣기 - 스웨거와 포스트맨
10:19 application.yml 소스트리에 추가해야 될 부분 체크 ***
11:06 Scale out
	데이터센터를 사용하다가 트래픽이 많이 몰릴 경우에
	클라우드를 추가해서 가상머신에 서버를 더 띄우는 방식을 한다
11:11 ./gradlew build
	터미널에서 빌드하는 다른 방법
	테스트코드도 성공해야 build된다
	그리고 이걸 터미널에서 실행하는 방법 체크
12:26 로드밸런스에 대한 개념
	uri: lb:// 1ST-SERVICE
12:34 빌트인필터와 커스텀필터 활용 예정
	커스텀필터 활용 예정 -> Security할 때 사용